name: Generate HTML and PDFs from Markdown
on:
  push:
    paths:
      - '**/*.md'
      - '.github/workflows/*.yml'
      - 'scripts/**/*'
    branches-ignore:
      - gh-pages
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-html:
    name: Generate HTML artifacts
    runs-on: ubuntu-latest
    outputs:
      html: ${{ steps.set-matrix.outputs.html }}

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build HTML
        shell: bash
        run: |
          shopt -s globstar
          pip install -r scripts/requirements.txt
          scripts/mds_to_html.sh

      - name: Upload HTML artifact
        uses: actions/upload-artifact@v4
        with:
          path: build
          name: html-build

      - name: Enumerate HTML files
        id: set-matrix
        run: |
          {
            echo 'html<<EOF'
            ls -1 build/*.html | jq -R -s -c 'split("\n")[:-1]'
            echo EOF
          } >> "$GITHUB_OUTPUT"

  publish-pages:
    name: Publish to GitHub Pages
    runs-on: ubuntu-latest
    needs: [generate-html]
    steps:
      - name: Checkout GitHub Pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Download HTML artifact
        uses: actions/download-artifact@v4
        with:
          path: build
          name: html-build

      - name: Commit artifact
        run: |
          shopt -s globstar
          git config user.name github-actions
          git config user.email github-actions@github.com
          if [ '${{ github.ref_name }}' != 'master' ]; then
            SUBDIR='branch/${{ github.ref_name }}'
            mkdir -p "$SUBDIR"
          else
            SUBDIR=""
          fi
          mv -f build/* "./$SUBDIR"
          for f in ./$SUBDIR/**/*.html; do
            sed -i "/<head>/a <base href=\"${{ vars.WEBROOT }}/$SUBDIR\" />" "$f"
          done
          if [ -z "$SUBDIR" ]; then
            git restore branch/**/*
          fi
          git add **/*.html **/main.{css,js} **/images
          git commit -m "Generate HTML from commit $GITHUB_SHA"
          git push

  generate-pdfs:
    name: Generate PDF build
    runs-on: ubuntu-latest
    needs: [generate-html]
    strategy:
      fail-fast: true
      matrix:
        file: ${{ fromJson(needs.generate-html.outputs.html) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download HTML artifact
        uses: actions/download-artifact@v4
        with:
          name: html-build
          path: build

      - name: Get PDF filename
        shell: bash
        id: pdf
        run: |
          cat "${{ matrix.file }}" | sed -r -n -e 's/^.*<!--\s*title:\s*(.+)$/file=\1.pdf/p' >> "$GITHUB_OUTPUT"
          echo "${{ matrix.file }}" | sed -r 's/ /-/g;s/[^a-zA-Z0-9_-]+/-/g;s/(.+)/artifact=\L\1/g' >> "$GITHUB_OUTPUT"
          mv "${{ matrix.file }}" build/index.html
          mkdir -p build/pdf

      - name: Generate PDFs from HTML
        uses: ferdinandkeller/html-to-pdf-action@v2.1
        with:
          source-path: "./build"
          destination-path: "./build/pdf/${{ steps.pdf.outputs.file }}"

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          path: build/pdf
          name: pdf-out-${{ steps.pdf.outputs.artifact }}

  commit-pdfs:
    name: Commit and push PDFs
    runs-on: ubuntu-latest
    needs: [generate-pdfs]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download PDF artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
          pattern: pdf-out-*
          merge-multiple: true

      - name: Commit and push PDFs
        shell: bash
        run: |
          shopt -s globstar
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add **/*.pdf
          git commit -m "Generate PDFs from commit $GITHUB_SHA"
          git push
